-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity spmv_accel_spvm_kernel is
port (
    values_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    values_ce0 : OUT STD_LOGIC;
    values_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    values_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    values_we0 : OUT STD_LOGIC;
    values_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    values_ce1 : OUT STD_LOGIC;
    values_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    values_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    values_we1 : OUT STD_LOGIC;
    cols_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    cols_ce0 : OUT STD_LOGIC;
    cols_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    cols_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cols_we0 : OUT STD_LOGIC;
    cols_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    cols_ce1 : OUT STD_LOGIC;
    cols_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    cols_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    cols_we1 : OUT STD_LOGIC;
    rows_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    rows_ce0 : OUT STD_LOGIC;
    rows_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    rows_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    rows_we0 : OUT STD_LOGIC;
    rows_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    rows_ce1 : OUT STD_LOGIC;
    rows_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    rows_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    rows_we1 : OUT STD_LOGIC;
    x_local_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    x_local_ce0 : OUT STD_LOGIC;
    x_local_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_local_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    x_local_we0 : OUT STD_LOGIC;
    x_local_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    x_local_ce1 : OUT STD_LOGIC;
    x_local_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_local_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    x_local_we1 : OUT STD_LOGIC;
    y_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    y_ce0 : OUT STD_LOGIC;
    y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    y_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    y_we0 : OUT STD_LOGIC;
    y_address1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    y_ce1 : OUT STD_LOGIC;
    y_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    y_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    y_we1 : OUT STD_LOGIC;
    row_size : IN STD_LOGIC_VECTOR (31 downto 0);
    data_size : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    row_size_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    data_size_ap_vld : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of spmv_accel_spvm_kernel is 
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_start : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_done : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_continue : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_idle : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_ready : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_start_out : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_start_write : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_rows_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_rows_ce0 : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_rows_fifo_din : STD_LOGIC_VECTOR (31 downto 0);
    signal spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_rows_fifo_write : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_row_size_c_din : STD_LOGIC_VECTOR (31 downto 0);
    signal spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_row_size_c_write : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_start : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_done : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_continue : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_idle : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_ready : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_values_fifo_din : STD_LOGIC_VECTOR (31 downto 0);
    signal spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_values_fifo_write : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_cols_fifo_din : STD_LOGIC_VECTOR (31 downto 0);
    signal spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_cols_fifo_write : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_values_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_values_ce0 : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_cols_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_cols_ce0 : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_start : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_done : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_continue : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_idle : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_ready : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_values_fifo_read : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_cols_fifo_read : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_x_local_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_x_local_ce0 : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_rows_fifo_read : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_results_fifo_din : STD_LOGIC_VECTOR (31 downto 0);
    signal spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_results_fifo_write : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_ap_start : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_ap_done : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_ap_continue : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_ap_idle : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_ap_ready : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_row_size_read : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_results_fifo_read : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_y_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_y_ce0 : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_y_we0 : STD_LOGIC;
    signal spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_fifo_full_n : STD_LOGIC;
    signal rows_fifo_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_fifo_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal rows_fifo_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal rows_fifo_empty_n : STD_LOGIC;
    signal row_size_c_full_n : STD_LOGIC;
    signal row_size_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal row_size_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal row_size_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal row_size_c_empty_n : STD_LOGIC;
    signal values_fifo_full_n : STD_LOGIC;
    signal values_fifo_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal values_fifo_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal values_fifo_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal values_fifo_empty_n : STD_LOGIC;
    signal cols_fifo_full_n : STD_LOGIC;
    signal cols_fifo_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_fifo_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal cols_fifo_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal cols_fifo_empty_n : STD_LOGIC;
    signal results_fifo_full_n : STD_LOGIC;
    signal results_fifo_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal results_fifo_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal results_fifo_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal results_fifo_empty_n : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_ready : STD_LOGIC;
    signal start_for_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_full_n : STD_LOGIC;
    signal start_for_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_empty_n : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component spmv_accel_spvm_kernel_Loop_VITIS_LOOP_30_1_proc2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        row_size : IN STD_LOGIC_VECTOR (31 downto 0);
        rows_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        rows_ce0 : OUT STD_LOGIC;
        rows_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        rows_fifo_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        rows_fifo_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        rows_fifo_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        rows_fifo_full_n : IN STD_LOGIC;
        rows_fifo_write : OUT STD_LOGIC;
        row_size_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        row_size_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        row_size_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        row_size_c_full_n : IN STD_LOGIC;
        row_size_c_write : OUT STD_LOGIC );
    end component;


    component spmv_accel_spvm_kernel_Loop_VITIS_LOOP_35_2_proc3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        values_fifo_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        values_fifo_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        values_fifo_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        values_fifo_full_n : IN STD_LOGIC;
        values_fifo_write : OUT STD_LOGIC;
        cols_fifo_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols_fifo_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        cols_fifo_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        cols_fifo_full_n : IN STD_LOGIC;
        cols_fifo_write : OUT STD_LOGIC;
        data_size : IN STD_LOGIC_VECTOR (31 downto 0);
        values_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        values_ce0 : OUT STD_LOGIC;
        values_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cols_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cols_ce0 : OUT STD_LOGIC;
        cols_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component spmv_accel_spvm_kernel_Loop_VITIS_LOOP_52_3_proc4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_size : IN STD_LOGIC_VECTOR (31 downto 0);
        values_fifo_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        values_fifo_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        values_fifo_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        values_fifo_empty_n : IN STD_LOGIC;
        values_fifo_read : OUT STD_LOGIC;
        cols_fifo_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        cols_fifo_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        cols_fifo_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        cols_fifo_empty_n : IN STD_LOGIC;
        cols_fifo_read : OUT STD_LOGIC;
        x_local_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        x_local_ce0 : OUT STD_LOGIC;
        x_local_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        rows_fifo_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        rows_fifo_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        rows_fifo_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        rows_fifo_empty_n : IN STD_LOGIC;
        rows_fifo_read : OUT STD_LOGIC;
        results_fifo_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        results_fifo_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        results_fifo_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        results_fifo_full_n : IN STD_LOGIC;
        results_fifo_write : OUT STD_LOGIC );
    end component;


    component spmv_accel_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        row_size_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        row_size_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        row_size_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        row_size_empty_n : IN STD_LOGIC;
        row_size_read : OUT STD_LOGIC;
        results_fifo_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        results_fifo_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        results_fifo_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        results_fifo_empty_n : IN STD_LOGIC;
        results_fifo_read : OUT STD_LOGIC;
        y_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        y_ce0 : OUT STD_LOGIC;
        y_we0 : OUT STD_LOGIC;
        y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component spmv_accel_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component spmv_accel_fifo_w32_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component spmv_accel_start_for_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0 : component spmv_accel_spvm_kernel_Loop_VITIS_LOOP_30_1_proc2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_start,
        start_full_n => start_for_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_full_n,
        ap_done => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_done,
        ap_continue => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_continue,
        ap_idle => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_idle,
        ap_ready => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_ready,
        start_out => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_start_out,
        start_write => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_start_write,
        row_size => row_size,
        rows_address0 => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_rows_address0,
        rows_ce0 => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_rows_ce0,
        rows_q0 => rows_q0,
        rows_fifo_din => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_rows_fifo_din,
        rows_fifo_num_data_valid => rows_fifo_num_data_valid,
        rows_fifo_fifo_cap => rows_fifo_fifo_cap,
        rows_fifo_full_n => rows_fifo_full_n,
        rows_fifo_write => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_rows_fifo_write,
        row_size_c_din => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_row_size_c_din,
        row_size_c_num_data_valid => row_size_c_num_data_valid,
        row_size_c_fifo_cap => row_size_c_fifo_cap,
        row_size_c_full_n => row_size_c_full_n,
        row_size_c_write => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_row_size_c_write);

    spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0 : component spmv_accel_spvm_kernel_Loop_VITIS_LOOP_35_2_proc3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_start,
        ap_done => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_done,
        ap_continue => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_continue,
        ap_idle => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_idle,
        ap_ready => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_ready,
        values_fifo_din => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_values_fifo_din,
        values_fifo_num_data_valid => values_fifo_num_data_valid,
        values_fifo_fifo_cap => values_fifo_fifo_cap,
        values_fifo_full_n => values_fifo_full_n,
        values_fifo_write => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_values_fifo_write,
        cols_fifo_din => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_cols_fifo_din,
        cols_fifo_num_data_valid => cols_fifo_num_data_valid,
        cols_fifo_fifo_cap => cols_fifo_fifo_cap,
        cols_fifo_full_n => cols_fifo_full_n,
        cols_fifo_write => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_cols_fifo_write,
        data_size => data_size,
        values_address0 => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_values_address0,
        values_ce0 => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_values_ce0,
        values_q0 => values_q0,
        cols_address0 => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_cols_address0,
        cols_ce0 => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_cols_ce0,
        cols_q0 => cols_q0);

    spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0 : component spmv_accel_spvm_kernel_Loop_VITIS_LOOP_52_3_proc4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_start,
        ap_done => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_done,
        ap_continue => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_continue,
        ap_idle => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_idle,
        ap_ready => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_ready,
        data_size => data_size,
        values_fifo_dout => values_fifo_dout,
        values_fifo_num_data_valid => values_fifo_num_data_valid,
        values_fifo_fifo_cap => values_fifo_fifo_cap,
        values_fifo_empty_n => values_fifo_empty_n,
        values_fifo_read => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_values_fifo_read,
        cols_fifo_dout => cols_fifo_dout,
        cols_fifo_num_data_valid => cols_fifo_num_data_valid,
        cols_fifo_fifo_cap => cols_fifo_fifo_cap,
        cols_fifo_empty_n => cols_fifo_empty_n,
        cols_fifo_read => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_cols_fifo_read,
        x_local_address0 => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_x_local_address0,
        x_local_ce0 => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_x_local_ce0,
        x_local_q0 => x_local_q0,
        rows_fifo_dout => rows_fifo_dout,
        rows_fifo_num_data_valid => rows_fifo_num_data_valid,
        rows_fifo_fifo_cap => rows_fifo_fifo_cap,
        rows_fifo_empty_n => rows_fifo_empty_n,
        rows_fifo_read => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_rows_fifo_read,
        results_fifo_din => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_results_fifo_din,
        results_fifo_num_data_valid => results_fifo_num_data_valid,
        results_fifo_fifo_cap => results_fifo_fifo_cap,
        results_fifo_full_n => results_fifo_full_n,
        results_fifo_write => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_results_fifo_write);

    spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0 : component spmv_accel_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_ap_start,
        ap_done => spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_ap_done,
        ap_continue => spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_ap_continue,
        ap_idle => spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_ap_idle,
        ap_ready => spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_ap_ready,
        row_size_dout => row_size_c_dout,
        row_size_num_data_valid => row_size_c_num_data_valid,
        row_size_fifo_cap => row_size_c_fifo_cap,
        row_size_empty_n => row_size_c_empty_n,
        row_size_read => spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_row_size_read,
        results_fifo_dout => results_fifo_dout,
        results_fifo_num_data_valid => results_fifo_num_data_valid,
        results_fifo_fifo_cap => results_fifo_fifo_cap,
        results_fifo_empty_n => results_fifo_empty_n,
        results_fifo_read => spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_results_fifo_read,
        y_address0 => spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_y_address0,
        y_ce0 => spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_y_ce0,
        y_we0 => spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_y_we0,
        y_d0 => spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_y_d0);

    rows_fifo_U : component spmv_accel_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_rows_fifo_din,
        if_full_n => rows_fifo_full_n,
        if_write => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_rows_fifo_write,
        if_dout => rows_fifo_dout,
        if_num_data_valid => rows_fifo_num_data_valid,
        if_fifo_cap => rows_fifo_fifo_cap,
        if_empty_n => rows_fifo_empty_n,
        if_read => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_rows_fifo_read);

    row_size_c_U : component spmv_accel_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_row_size_c_din,
        if_full_n => row_size_c_full_n,
        if_write => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_row_size_c_write,
        if_dout => row_size_c_dout,
        if_num_data_valid => row_size_c_num_data_valid,
        if_fifo_cap => row_size_c_fifo_cap,
        if_empty_n => row_size_c_empty_n,
        if_read => spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_row_size_read);

    values_fifo_U : component spmv_accel_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_values_fifo_din,
        if_full_n => values_fifo_full_n,
        if_write => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_values_fifo_write,
        if_dout => values_fifo_dout,
        if_num_data_valid => values_fifo_num_data_valid,
        if_fifo_cap => values_fifo_fifo_cap,
        if_empty_n => values_fifo_empty_n,
        if_read => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_values_fifo_read);

    cols_fifo_U : component spmv_accel_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_cols_fifo_din,
        if_full_n => cols_fifo_full_n,
        if_write => spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_cols_fifo_write,
        if_dout => cols_fifo_dout,
        if_num_data_valid => cols_fifo_num_data_valid,
        if_fifo_cap => cols_fifo_fifo_cap,
        if_empty_n => cols_fifo_empty_n,
        if_read => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_cols_fifo_read);

    results_fifo_U : component spmv_accel_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_results_fifo_din,
        if_full_n => results_fifo_full_n,
        if_write => spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_results_fifo_write,
        if_dout => results_fifo_dout,
        if_num_data_valid => results_fifo_num_data_valid,
        if_fifo_cap => results_fifo_fifo_cap,
        if_empty_n => results_fifo_empty_n,
        if_read => spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_results_fifo_read);

    start_for_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_U : component spmv_accel_start_for_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_din,
        if_full_n => start_for_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_full_n,
        if_write => spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_start_write,
        if_dout => start_for_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_dout,
        if_empty_n => start_for_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_empty_n,
        if_read => spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_ap_ready);





    ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_ready <= ap_sync_spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_ready <= ap_sync_spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_ready <= ap_sync_spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    ap_done <= spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_ap_done;
    ap_idle <= (spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_ap_idle and spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_idle and spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_idle and spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_ready <= (ap_sync_spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_ready and ap_sync_spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_ready and ap_sync_spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_ready);
    ap_sync_spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_ready <= (spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_ready or ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_ready);
    ap_sync_spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_ready <= (spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_ready or ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_ready);
    ap_sync_spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_ready <= (spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_ready or ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_ready);
    cols_address0 <= spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_cols_address0;
    cols_address1 <= ap_const_lv4_0;
    cols_ce0 <= spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_cols_ce0;
    cols_ce1 <= ap_const_logic_0;
    cols_d0 <= ap_const_lv32_0;
    cols_d1 <= ap_const_lv32_0;
    cols_we0 <= ap_const_logic_0;
    cols_we1 <= ap_const_logic_0;
    rows_address0 <= spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_rows_address0;
    rows_address1 <= ap_const_lv2_0;
    rows_ce0 <= spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_rows_ce0;
    rows_ce1 <= ap_const_logic_0;
    rows_d0 <= ap_const_lv32_0;
    rows_d1 <= ap_const_lv32_0;
    rows_we0 <= ap_const_logic_0;
    rows_we1 <= ap_const_logic_0;
    spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_continue <= ap_const_logic_1;
    spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_start <= ((ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_30_1_proc2_U0_ap_ready xor ap_const_logic_1) and ap_start);
    spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_continue <= ap_const_logic_1;
    spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_start <= ((ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_ap_ready xor ap_const_logic_1) and ap_start);
    spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_continue <= ap_const_logic_1;
    spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_start <= ((ap_sync_reg_spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_ap_ready xor ap_const_logic_1) and ap_start);
    spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_ap_continue <= ap_continue;
    spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_ap_start <= start_for_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_empty_n;
    start_for_spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_din <= (0=>ap_const_logic_1, others=>'-');
    values_address0 <= spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_values_address0;
    values_address1 <= ap_const_lv4_0;
    values_ce0 <= spvm_kernel_Loop_VITIS_LOOP_35_2_proc3_U0_values_ce0;
    values_ce1 <= ap_const_logic_0;
    values_d0 <= ap_const_lv32_0;
    values_d1 <= ap_const_lv32_0;
    values_we0 <= ap_const_logic_0;
    values_we1 <= ap_const_logic_0;
    x_local_address0 <= spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_x_local_address0;
    x_local_address1 <= ap_const_lv2_0;
    x_local_ce0 <= spvm_kernel_Loop_VITIS_LOOP_52_3_proc4_U0_x_local_ce0;
    x_local_ce1 <= ap_const_logic_0;
    x_local_d0 <= ap_const_lv32_0;
    x_local_d1 <= ap_const_lv32_0;
    x_local_we0 <= ap_const_logic_0;
    x_local_we1 <= ap_const_logic_0;
    y_address0 <= spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_y_address0;
    y_address1 <= ap_const_lv2_0;
    y_ce0 <= spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_y_ce0;
    y_ce1 <= ap_const_logic_0;
    y_d0 <= spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_y_d0;
    y_d1 <= ap_const_lv32_0;
    y_we0 <= spvm_kernel_Loop_VITIS_LOOP_70_4_proc5_U0_y_we0;
    y_we1 <= ap_const_logic_0;
end behav;
